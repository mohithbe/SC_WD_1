<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Tic Tac Toe - Play vs Computer</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@200&family=Roboto+Serif&display=swap" rel="stylesheet" />
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      color: #000;
      text-align: center;
      padding: 30px;
    }
    h1 {
      margin-bottom: 20px;
    }
    #board {
      margin: 0 auto;
      width: 375px;
      height: 375px;
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      grid-gap: 5px;
    }
    .square {
      width: 120px;
      height: 120px;
      border: 1px solid #D3D3D3;
      background-color: #F5F5F5;
      font-size: 40px;
      display: flex;
      justify-content: center;
      align-items: center;
      cursor: pointer;
      user-select: none;
    }
    .square:hover {
      background-color: #FFFFE0;
    }
    #restartButton {
      margin-top: 20px;
      height: 40px;
      width: 150px;
      background-color: #FFFFFF;
      border: 1px solid #000000;
      border-radius: 40px;
      font-size: 18px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    #restartButton:hover {
      background-color: #000000;
      color: #FFFFFF;
    }
    #statusMessage {
      margin-top: 25px;
      font-size: 20px;
      font-weight: 600;
    }
  </style>
</head>
<body>
  <h1>Tic Tac Toe - Play vs Computer</h1>
  <div id="board">
    <div class="square" id="square0"></div>
    <div class="square" id="square1"></div>
    <div class="square" id="square2"></div>
    <div class="square" id="square3"></div>
    <div class="square" id="square4"></div>
    <div class="square" id="square5"></div>
    <div class="square" id="square6"></div>
    <div class="square" id="square7"></div>
    <div class="square" id="square8"></div>
  </div>

  <button id="restartButton">Restart</button>
  <div id="statusMessage">Your turn (X)</div>

  <script>
    const board = document.getElementById('board');
    const squares = document.getElementsByClassName('square');
    const statusMessage = document.getElementById('statusMessage');
    const restartButton = document.getElementById('restartButton');

    const players = ['X', 'O']; // X = human, O = computer
    let currentPlayer = players[0];
    let someoneWon = false;

    const winning_combinations = [
      [0,1,2], [3,4,5], [6,7,8],
      [0,3,6], [1,4,7], [2,5,8],
      [0,4,8], [2,4,6]
    ];

    // Human move
    for(let i = 0; i < squares.length; i++) {
      squares[i].addEventListener('click', () => {
        if (someoneWon || currentPlayer !== 'X') return; // Only human's turn and game active
        if (squares[i].textContent !== '') return; // Ignore if already filled

        squares[i].textContent = 'X';
        if (checkWin('X')) {
          someoneWon = true;
          statusMessage.textContent = "You win! ðŸŽ‰";
          return;
        }
        if (checkTie()) {
          someoneWon = true;
          statusMessage.textContent = "It's a tie!";
          return;
        }
        currentPlayer = 'O';
        statusMessage.textContent = "Computer's turn (O)";
        
        // Give small delay before computer moves for better UX
        setTimeout(computerMove, 600);
      });
    }

    function computerMove() {
      if (someoneWon) return;

      // Get all empty squares indexes
      const emptySquares = [];
      for(let i=0; i<squares.length; i++) {
        if (squares[i].textContent === '') emptySquares.push(i);
      }

      if (emptySquares.length === 0) return;

      // Simple AI: random pick an empty square
      const randomIndex = emptySquares[Math.floor(Math.random() * emptySquares.length)];
      squares[randomIndex].textContent = 'O';

      if (checkWin('O')) {
        someoneWon = true;
        statusMessage.textContent = "Computer wins! ðŸ’»";
        return;
      }

      if (checkTie()) {
        someoneWon = true;
        statusMessage.textContent = "It's a tie!";
        return;
      }

      currentPlayer = 'X';
      statusMessage.textContent = "Your turn (X)";
    }

    function checkWin(player) {
      return winning_combinations.some(comb => {
        return comb.every(index => squares[index].textContent === player);
      });
    }

    function checkTie() {
      for(let i=0; i<squares.length; i++) {
        if (squares[i].textContent === '') return false;
      }
      return true;
    }

    restartButton.addEventListener('click', () => {
      for(let i=0; i<squares.length; i++) {
        squares[i].textContent = '';
      }
      someoneWon = false;
      currentPlayer = 'X';
      statusMessage.textContent = "Your turn (X)";
    });
  </script>
</body>
</html>